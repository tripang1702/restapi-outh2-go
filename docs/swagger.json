{
    "swagger": "2.0",
    "info": {
        "description": "This is restful api project using golang.",
        "title": "REST API PROJECT Golang",
        "contact": {
            "name": "Ahmad Rifal Alfarisi",
            "url": "https://www.instagram.com/tr_ipang/",
            "email": "rifalalfa1702@gmail.com"
        },
        "version": "version(1.0)"
    },
    "host": "localhost:1323",
    "basePath": "/",
    "paths": {
        "/api/cakes": {
            "get": {
                "description": "API get all data cake",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Cake"
                ],
                "summary": "Get data all cake",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Cake"
                            }
                        }
                    },
                    "400": {
                        "description": ""
                    }
                }
            },
            "post": {
                "description": "API create data cake",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Cake"
                ],
                "summary": "Post data cake by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Cake data",
                        "name": "cakebody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CreateCake"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.CreateCake"
                            }
                        }
                    },
                    "400": {
                        "description": ""
                    }
                }
            }
        },
        "/api/cakes/{id}": {
            "get": {
                "description": "API get data cake by id",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Cake"
                ],
                "summary": "Get data cake by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Cake"
                            }
                        }
                    },
                    "400": {
                        "description": ""
                    }
                }
            },
            "delete": {
                "description": "API delete data cake by id",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Cake"
                ],
                "summary": "Delete data cake by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.MessageData"
                            }
                        }
                    },
                    "400": {
                        "description": ""
                    }
                }
            },
            "patch": {
                "description": "API update data cake by id",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Cake"
                ],
                "summary": "Patch data cake by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Cake data",
                        "name": "cakebody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UpdateCake"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.UpdateCake"
                            }
                        }
                    },
                    "400": {
                        "description": ""
                    }
                }
            }
        },
        "/oauth2/token": {
            "get": {
                "description": "API to generate access token",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Authorization"
                ],
                "summary": "Get Access Token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Grant type (example : password, refresh_token)",
                        "name": "grant_type",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Client id",
                        "name": "client_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Client secret",
                        "name": "client_secret",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "used when grant_type=password",
                        "name": "username",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "used when grant_type=password",
                        "name": "password",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "scope (example : read)",
                        "name": "scope",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "used when grant_type=refresh_token",
                        "name": "refresh_token",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Tokensuccess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorToken"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Cake": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "false"
                },
                "description": {
                    "type": "string",
                    "example": "tahu bulat digoreng dadakan"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "image": {
                    "type": "string",
                    "example": "http://linkketahubulat.jpg"
                },
                "rating": {
                    "type": "number",
                    "example": 9
                },
                "title": {
                    "type": "string",
                    "example": "tahu bulat"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2022-05-14 22:58:18"
                }
            }
        },
        "model.CreateCake": {
            "type": "object",
            "required": [
                "description",
                "image",
                "rating",
                "title"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "example": "tahu bulat digoreng dadakan"
                },
                "image": {
                    "type": "string",
                    "example": "http://linkketahubulat.jpg"
                },
                "rating": {
                    "type": "number",
                    "example": 9
                },
                "title": {
                    "type": "string",
                    "example": "tahu bulat"
                }
            }
        },
        "model.ErrorToken": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "server_error"
                },
                "error_description": {
                    "type": "string",
                    "example": "The authorization server encountered an unexpected condition that prevented it from fulfilling the request"
                }
            }
        },
        "model.MessageData": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                }
            }
        },
        "model.Tokensuccess": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string",
                    "example": "FXMCFR5JOKIQZCKL11OOFW"
                },
                "expires_in": {
                    "type": "integer",
                    "example": 7200
                },
                "refresh_token": {
                    "type": "string",
                    "example": "TI3N8E_GUACZP6LLURBOCW"
                },
                "scope": {
                    "type": "string",
                    "example": "read"
                },
                "token_type": {
                    "type": "string",
                    "example": "Bearer"
                }
            }
        },
        "model.UpdateCake": {
            "type": "object",
            "required": [
                "description",
                "image",
                "rating",
                "title"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "example": "tahu bulat digoreng dadakan"
                },
                "image": {
                    "type": "string",
                    "example": "http://linkketahubulat.jpg"
                },
                "rating": {
                    "type": "number",
                    "example": 9
                },
                "title": {
                    "type": "string",
                    "example": "tahu bulat"
                }
            }
        }
    }
}