basePath: /
definitions:
  model.Cake:
    properties:
      created_at:
        example: "false"
        type: string
      description:
        example: tahu bulat digoreng dadakan
        type: string
      id:
        example: "1"
        type: string
      image:
        example: http://linkketahubulat.jpg
        type: string
      rating:
        example: 9
        type: number
      title:
        example: tahu bulat
        type: string
      updated_at:
        example: "2022-05-14 22:58:18"
        type: string
    type: object
  model.CreateCake:
    properties:
      description:
        example: tahu bulat digoreng dadakan
        type: string
      image:
        example: http://linkketahubulat.jpg
        type: string
      rating:
        example: 9
        type: number
      title:
        example: tahu bulat
        type: string
    required:
    - description
    - image
    - rating
    - title
    type: object
  model.ErrorToken:
    properties:
      error:
        example: server_error
        type: string
      error_description:
        example: The authorization server encountered an unexpected condition that
          prevented it from fulfilling the request
        type: string
    type: object
  model.MessageData:
    properties:
      message:
        type: string
      status:
        type: boolean
    type: object
  model.Tokensuccess:
    properties:
      access_token:
        example: FXMCFR5JOKIQZCKL11OOFW
        type: string
      expires_in:
        example: 7200
        type: integer
      refresh_token:
        example: TI3N8E_GUACZP6LLURBOCW
        type: string
      scope:
        example: read
        type: string
      token_type:
        example: Bearer
        type: string
    type: object
  model.UpdateCake:
    properties:
      description:
        example: tahu bulat digoreng dadakan
        type: string
      image:
        example: http://linkketahubulat.jpg
        type: string
      rating:
        example: 9
        type: number
      title:
        example: tahu bulat
        type: string
    required:
    - description
    - image
    - rating
    - title
    type: object
host: localhost:1323
info:
  contact:
    email: rifalalfa1702@gmail.com
    name: Ahmad Rifal Alfarisi
    url: https://www.instagram.com/tr_ipang/
  description: This is restful api project using golang.
  title: REST API PROJECT Golang
  version: version(1.0)
paths:
  /api/cakes:
    get:
      consumes:
      - application/json
      description: API get all data cake
      parameters:
      - description: Bearer Authorization
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Cake'
            type: array
        "400":
          description: ""
      summary: Get data all cake
      tags:
      - Cake
    post:
      consumes:
      - application/json
      description: API create data cake
      parameters:
      - description: Bearer Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Cake data
        in: body
        name: cakebody
        required: true
        schema:
          $ref: '#/definitions/model.CreateCake'
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.CreateCake'
            type: array
        "400":
          description: ""
      summary: Post data cake by id
      tags:
      - Cake
  /api/cakes/{id}:
    delete:
      consumes:
      - application/json
      description: API delete data cake by id
      parameters:
      - description: Bearer Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.MessageData'
            type: array
        "400":
          description: ""
      summary: Delete data cake by id
      tags:
      - Cake
    get:
      consumes:
      - application/json
      description: API get data cake by id
      parameters:
      - description: Bearer Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Cake'
            type: array
        "400":
          description: ""
      summary: Get data cake by id
      tags:
      - Cake
    patch:
      consumes:
      - application/json
      description: API update data cake by id
      parameters:
      - description: Bearer Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: Cake data
        in: body
        name: cakebody
        required: true
        schema:
          $ref: '#/definitions/model.UpdateCake'
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.UpdateCake'
            type: array
        "400":
          description: ""
      summary: Patch data cake by id
      tags:
      - Cake
  /oauth2/token:
    get:
      consumes:
      - application/json
      description: API to generate access token
      parameters:
      - description: 'Grant type (example : password, refresh_token)'
        in: query
        name: grant_type
        required: true
        type: string
      - description: Client id
        in: query
        name: client_id
        required: true
        type: string
      - description: Client secret
        in: query
        name: client_secret
        required: true
        type: string
      - description: used when grant_type=password
        in: query
        name: username
        type: string
      - description: used when grant_type=password
        in: query
        name: password
        type: string
      - description: 'scope (example : read)'
        in: query
        name: scope
        required: true
        type: string
      - description: used when grant_type=refresh_token
        in: query
        name: refresh_token
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Tokensuccess'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorToken'
      summary: Get Access Token
      tags:
      - Authorization
swagger: "2.0"
